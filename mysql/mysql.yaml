---
# Source: mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: example-mysql
  namespace: default
  labels:
    app: example-mysql
    chart: "mysql-1.6.2"
    release: "example"
    heritage: "Helm"
type: Opaque
data:
  mysql-root-password:  "bXlzcWw="
  mysql-password: "bXlzcWw="
---
# Source: mysql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: example-mysql
  namespace: default
  labels:
    app: example-mysql
    chart: "mysql-1.6.2"
    release: "example"
    heritage: "Helm"
  annotations:
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: example-mysql
---
# Source: mysql/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-mysql
  namespace: default
  labels:
    app: example-mysql
    chart: "mysql-1.6.2"
    release: "example"
    heritage: "Helm"

spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: example-mysql
      release: example
  template:
    metadata:
      labels:
        app: example-mysql
        release: example
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/jenkins"
                operator: In
                values:
                - jenkins
      serviceAccountName: default
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.29.3"
        imagePullPolicy: "IfNotPresent"
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        command:  ["rm", "-fr", "/var/lib/mysql/lost+found"]
      containers:
      - name: example-mysql
        image: "mysql:5.7.28"
        imagePullPolicy: "IfNotPresent"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: example-mysql
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: example-mysql
              key: mysql-password
              optional: true
        - name: MYSQL_USER
          value: "mysql"
        - name: MYSQL_DATABASE
          value: "laravel"
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
          readOnly: false
      volumes:
      - name: mysql-data
        hostPath:
          path: /data/mysql
          type: Directory
